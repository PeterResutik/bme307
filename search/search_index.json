{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the Bioinformatics Analysis of Microbiome Data","text":""},{"location":"#1-introduction","title":"1. INTRODUCTION","text":"<p>We will be working with NGS data generated from 3 groups of mice: IL-10<sup>-/-</sup> (deficient), MUC2<sup>-/-</sup> (deficient), and wild-type mice.</p>"},{"location":"#11-data-type","title":"1.1 Data type:","text":"<p>The data was obtained through targeted amplification of the V4V5 region of the 16S rRNA gene and paired-end sequencing on the Illumina Miseq platform, resulting in forward and reverse reads of 250 bp length (each).</p> <p> Figure 1. Figure 1. Simplified illustration of the genetic region amplified and sequenced. A) The bacterial 16SrRNA gene is part of the ribosomal RNA operon. B) The 16S rRNA gene spans over 1,500 bp and contains conserved regions (light green) as well as variable regions (white). In this study, we targeted the variable regions V4 and V5 using the 515F forward primer and the 926R reverse primer. The targeted region has an approximate length of 411 bp, but library preparation results in longer reads as barcodes are also added.  </p>"},{"location":"about/","title":"About","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"commands/","title":"Useful Terminal/PowerShell Commands","text":"<p>Depending on your operating system, open either terminal (Mac) or PowerShell (Windows). There are some similarities and some differences between Terminal and PowerShell commands. One important one is the usage of slashes (/) in case of Mac, and backslashes () in case of Windows, when specifying a path. </p>"},{"location":"commands/#1-list-files-in-the-current-working-directory","title":"1. List files in the current working directory","text":"<pre><code>ls\n</code></pre>"},{"location":"commands/#2-change-directory","title":"2. Change directory","text":""},{"location":"commands/#21-relative-path","title":"2.1 Relative path","text":"<p><pre><code>cd ./Downloads\n</code></pre> the . before slash (/) means current directory <pre><code>cd ..\n</code></pre> .. means parent directory</p>"},{"location":"commands/#22-absolute-path","title":"2.2 Absolute path","text":"MacWindows <pre><code>cd Users/Peter/Downloads\n</code></pre> <pre><code>cd C:\\Users\\Peter\\Downloads\n</code></pre>"},{"location":"commands/#3-create-directory","title":"3. Create directory","text":"<p><pre><code>mkdir example\n</code></pre> <pre><code>ls\n</code></pre> You should now see a directory called \"example\" in your current working directory. </p>"},{"location":"commands/#4-create-a-txt-file","title":"4. Create a .txt file","text":"MacWindows <pre><code>cat &gt; test.txt\n</code></pre> <pre><code>New-Item test.txt\n</code></pre> <p>Write something in the file (at least two lines). </p>"},{"location":"commands/#5-head-and-tail","title":"5. Head and Tail","text":"<p>When working with large files, we encourage you examine them. Since files are often too big to be loaded into Excel, head and tail commands are good alternatives to get a good idea of what the file looks like (this only works for unzipped files, i.e. non-binary).</p> MacWindows <pre><code>head -10 test.txt\n</code></pre> <pre><code>Get-Content test.txt -Head 10\n</code></pre> <p>You can replace the word head with tail to see the end of the file. </p>"},{"location":"commands/#6-docker","title":"6. Docker","text":"<p>Docker is a tool designed to make it easier to create, deploy, and run applications by using containers. Containers allow a developer to package up an application with all of the parts it needs, such as operating system, libraries and other dependencies, and ship it all out as one package.</p> <p>By running the following command, you create a docker container from an image that includes Ubuntu distribution and QIIME2.</p> <pre><code>docker run --rm -v ${pwd}:/data/ -w /data/ -it quay.io/qiime2/core:2023.5\n</code></pre> <p>After running this command, you should be in the container. This is indicated by the following text in your terminal (qiime2-2023.5). Once you list the files in the current working directory the files on your local computer should be reflected in the printed list. </p> <p>We encourage you to check the help command and identify what each of the options mean (e.g. --rm, -it, -v, -w).</p> <p><pre><code>$ docker run --help\n</code></pre> Files that you create while running qiime2 in the docker container will be reflected in your local directory after running the workflow commands. </p>"},{"location":"installation_instructions/","title":"Installation instructions","text":"<p>TEST TEST TEST </p> <p>We ask all students to bring their own laptop and to install the required software before the beginning of the practicals. We will provide a troubleshooting session on Tuesday (19.9.2023), after the lecture, for those who need to resolve installation issues.</p> <p>For the course, we will be using the following software:</p> <ol> <li>Docker</li> <li>QIIME2 </li> <li>FastQC</li> </ol> <p>Please follow the instructions provided according to the operating system (OS) you are using. Feel free to email us with questions if you encounter installations issues bioinformatics.bme307@gmail.com. See you soon! </p>"},{"location":"installation_instructions/#for-windows-users","title":"For Windows Users:","text":""},{"location":"installation_instructions/#1-docker-qiime2","title":"1. Docker + QIIME2","text":"<p>Is \"Virtualization\" enabled?</p> <ul> <li>Press Ctrl + Alt + Del</li> <li>Select Task Manager</li> <li>Click the Performance tab</li> <li>Click CPU</li> <li>Is \"Virtualization:\" enabled? </li> <li>If not, you can follow the instructions on how to enable virtualization in BIOS here. </li> </ul> <p>The instructions may vary depending on the laptop you are using. The link includes instructions for Acer, Assus, Dell, HP, Lenovo, Sony, and Toshiba.</p> <ul> <li>Install Docker Desktop on Windows from here</li> <li>Run the .exe file. </li> </ul> <p>If you see the following error message</p> <p>\u201cDocker Desktop requires Windows 10 Pro/Enterprise (15063+) or Windows 10 Home (19018+).\u201d</p> <ul> <li>Update Windows by clicking on the \"Update now\" button here </li> <li>Try installing docker again</li> <li>Run the \"D.exe file. </li> </ul> <ul> <li>When prompted, ensure the Enable WSL 2 Features option is selected on the Configuration page</li> </ul> <p>WSL2 error</p> <ul> <li>If you encounter issues with WSL2, install \"Linux kernel update package\" from here</li> </ul> <ul> <li> <p>Start docker </p> <p>NOTE: search for Docker Desktip in the start menu. </p> </li> <li> <p>When the whale icon in the status bar stays steady, Docker Desktop is up-and running, and is accessible from the Windows PowerShell</p> </li> <li>Open Windows PowerShell and run the following command to ensure that docker is working correctly</li> </ul> <pre><code>docker run hello-world\n</code></pre> <p>Once the docker is installed and running you can run qiime2 and fastqc via the following commands: </p> <pre><code>docker run --rm -v ${pwd}:/data/ -w /data/ -it quay.io/qiime2/core:2023.5\n</code></pre>"},{"location":"installation_instructions/#for-mac-users","title":"For Mac Users:","text":""},{"location":"installation_instructions/#1-anaconda","title":"1. Anaconda","text":"<ul> <li>Install Anaconda for Mac from here</li> <li>Double click the .pkg file.</li> <li>Test your installation. </li> <li>Run the following command in the Terminal </li> </ul> <pre><code>conda list\n</code></pre>"},{"location":"installation_instructions/#2-qiime2","title":"2. QIIME2","text":"<ul> <li>Run the following commands to install QIIME2</li> </ul> <p><pre><code>wget https://data.qiime2.org/distro/core/qiime2-2023.5-py38-osx-conda.yml\nconda env create -n qiime2-2023.5 --file qiime2-2023.5-py38-osx-conda.yml\n</code></pre> - activate QIIME2 environment</p> <pre><code>conda activate qiime2-2023.5\n</code></pre> <ul> <li>Run the following command to test the installation</li> </ul> <pre><code>qiime --help\n</code></pre>"},{"location":"installation_instructions/#2-fastqc","title":"2. FastQC","text":"<p>Download and install the following file. </p> <p>Do you have issues starting the tool due to verification?</p> <ul> <li>Install Java Development Kit from here and try again. </li> </ul> <p>If installing Java Development Kit did not work, download the FastQC source code from here. Unzip the file and from the terminal window, navigate to the unzipped folder on your mac. Subsequently, run the following command: </p> <pre><code>./fastqc\n</code></pre>"},{"location":"qiime2_pipeline/","title":"QIIME2 primer","text":""},{"location":"qiime2_pipeline/#what-is-qiime2","title":"What is QIIME2?","text":"<p>As described on the QIIME2 portal :</p> What is QIIME 2? <p>QIIME 2 is a powerful, extensible, and decentralized microbiome analysis package with a focus on data and analysis transparency. QIIME 2 enables researchers to start an analysis with raw DNA sequence data and finish with publication-quality figures and statistical results.  </p>"},{"location":"qiime2_pipeline/#qiime2-overview","title":"QIIME2 Overview","text":"<p>From https://docs.qiime2.org/2023.7/tutorials/overview/: </p>"},{"location":"qiime2_pipeline/#qiime2-artifacts","title":"QIIME2 Artifacts","text":"<p>In QIIME2, we use \u201cartifacts\u201d instead of data files (e.g. FASTA files): these contain not only data but also additional information on the generation of the file itself. Therefore, before we start working with QIIME2, we need to import our data as a QIIME2 artifact. </p> <p>Additional info: As described on the QIIME2 website (https://docs.qiime2.org/2023.7/concepts/): </p> <p>\u201cArtifacts enable QIIME 2 to track, in addition to the data itself, the provenance of how the data came to be. With an artifact\u2019s provenance, you can trace back to all previous analyses that were run to produce the artifact, including the input data used at each step. This automatic, integrated, and decentralized provenance tracking of data enables a researcher to archive artifacts, or for example, send an artifact to a collaborator, with the ability to understand exactly how the artifact was created. This enables replicability and reproducibility of analyses, as well as generation of diagrams and text that can be used in the methods section of a paper. Provenance also supports and encourages the proper attribution to underlying tools (e.g. FastTree to build a phylogenetic tree) used to generate the artifact.\u201d</p> <p>Before we get started, let's briefly discuss the two main file types used with QIIME2. These are <code>.qza</code> files and <code>.qzv</code> files.</p> <p><code>.qza</code> - The QIIME2 artifact file. These contain data.</p> <p><code>.qzv</code> - The QIIME2 visualization file. These contain visualizations that can be viewed using QIIME 2 View.</p> <p>In this course, we will mostly be using Qiime2view to visualise (instead of unzipping the qza file). You simply need to drag and drop the file of interest. </p>"},{"location":"workflow/","title":"Workflow","text":""},{"location":"workflow/#preliminary-read-processing","title":"PRELIMINARY READ PROCESSING","text":"<p>In our pipeline we will be working with reads that have already been demultiplexed. You will need to download the following starting folder for your analyses: Practical_materials_uploads. For each sample, there are two fastq files (R1 and R2). R1 corresponds to all the forward reads and R2 to all the reverse reads.</p> <p>We will first look at the fastq files, then check the quality of the reads with FastQC and MultiQC, and then conduct read processing in QIIME2 (denoising and OTU clustering). Follow the steps below:</p>"},{"location":"workflow/#1-check-the-fastq-files","title":"1.  Check the fastq files","text":"<p>After sequencing, the output is provided in the form of two FASTQ files per sample, one labelled R1 (forward reads) and one labelled R2 (reverse reads). Each FASTQ file contains reads, and these are provided as an entry with 4 lines: </p> <ol> <li>The first line contains a sequence identifier, including information about the sequencing run and the cluster. It usually begins with an \u201c@\u201d.</li> <li>The second line contains the base calls of the sequence (A, C, T, G and N).</li> <li>The third line comprises a plus (+) sign, which acts as a separator.</li> <li>The fourth line, which is important for the next step, provides information on the quality of each of the base calls. These are Phred +33 encoded, using ASCII characters to represent the numerical quality scores.</li> </ol> <p>An example of one entry of a FASTQ file (note that this corresponds to only one read of hundreds or thousands sequenced): </p> Exercise 1 <p>Select two fastq files, one corresponding to forward reads (R1) and one corresponding to reverse reads (R2). Copy them to a new folder called Raw_data_unzipped. Unzip them either with double clicking (on a Windows machine) or by running the following command gzip -d NAME_OF_THE_FILE (on a Mac). Next, explore the files using the command line (tip: use the commands you learnt previously).</p> Question(s): <ol> <li>Is the file format as expected?</li> <li>How many reads (entries) are there in each of these two files?</li> </ol>"},{"location":"workflow/#2-quality-check-using-fastqc","title":"2.   Quality check using FastQC","text":"<p>We now examine the quality of the bases. This will help us determine if there are parts of the reads that need to be trimmed/truncated. </p> <p>For the two fastq files you selected earlier, run fastqc as follows: Access the folder with all the raw .fastq (navigate with the <code>cd</code> command) files through Terminal (Mac Users) or Powershell (Windows Users). Next run the following command: </p> MacWindows <pre><code>fastqc *.fastq\n</code></pre> <p><pre><code>docker run --rm -v ${PWD}:/data/ -w /data/ -it pegi3s/fastqc IL10-1_S13_L001_R1_001.fastq\n</code></pre> Run this command independently for each unzipped file (in your Raw_data_unzipped folder). </p> Question(s): <ol> <li>Overall, which fastq file has higher quality scores, the R1 or R2?</li> <li>In each of these files, at which position do you observe a steep decline in base quality?</li> </ol>"},{"location":"workflow/#3-qiime2","title":"3.  QIIME2","text":"<p>We will now use QIIME2 for the next steps in the workflow: these involve importing the fastq files, trimming the primers, \"cleaning up\" the reads the merging the forward and reverse reads, generating a table containing information on the reads and their abundance, assigning taxonomy to these reads, and carrying out statistical analyses on bacterial diversity. </p>"},{"location":"workflow/#31-activate-qiime-2-environment","title":"3.1 Activate QIIME 2 environment","text":"<p>Set the path to the correct directory after downloading the necessary folder from Switchdrive (https://drive.switch.ch/index.php/s/i97MUDfcbcFNQVp)</p> <p>As a first step, activate QIIME with the following command (before doing so, navigate into the folder where you downloaded and unzipped the file from Switchdrive \"Practical_materials_uploads\"):</p> MacWindows <pre><code>conda activate qiime2-2023.5\n</code></pre> <pre><code>docker run --rm -v ${pwd}:/data/ -w /data/ -it quay.io/qiime2/core:2023.5\n</code></pre>"},{"location":"workflow/#32-import-raw-data","title":"3.2. Import raw data","text":"<p>Next, you will import the raw data (fastq files) by running qiime tools import. Notice that with this tool, each of the parameters you can provide starts with two dashes. Here you will be specifying the following parameters:</p> <ul> <li>type: whether your data is single-end or paired-end</li> <li>input-format specifies the format of the data. The available choices are provided here</li> <li>output-path: species the output path of the artefact you generate.</li> </ul> <p>Run the following command:</p> <pre><code>qiime tools import \\\n    --type 'SampleData[PairedEndSequencesWithQuality]' \\\n    --input-path Raw_data_zipped \\\n    --input-format CasavaOneEightSingleLanePerSampleDirFmt \\\n    --output-path QIIME2_files/demux-paired-end.qza\n</code></pre>"},{"location":"workflow/#321-summarise-imported-data-and-visualise","title":"3.2.1 Summarise imported data and visualise","text":"<p>You can now check whether the data was imported by running qiime demux summarise, specifying the name of the input file and the name of the artefact you want to generate. You can visualise this artefact by dropping it in QIIME2 view (https://view.qiime2.org/). </p> <pre><code>qiime demux summarize \\\n    --i-data QIIME2_files/demux-paired-end.qza \\\n    --o-visualization QIIME2_files/demux-paired-end-summary.qzv  \n</code></pre> Question(s): Basic - Check the \u201cOverview\u201d tabAdvanced \u2013 check the \u201cInteractive\u201d tab <ol> <li>How many forward and reverse reads are there overall?</li> <li>For the samples you examined on FastQC, how many forward reads and reverse reads are there?</li> <li>Do any samples stand out eg have a particularly high or low number of reads? </li> </ol> <ol> <li>Look at the plots and the quality scores: What trends do you observe in terms of quality score changes in the forward and reverse reads?</li> <li>Scroll down to the \u201cDemultiplexed sequence length summary\u201d: What is the read length? How much overlap do you expect for the forward and reverse reads? </li> </ol>"},{"location":"workflow/#33-remove-primers-with-cutadapt","title":"3.3 Remove primers with Cutadapt","text":"<p>We need to remove the primers that were used for targeted amplification. To do this we use cutadapt trim-paired, specifying these main parameters:</p> <ul> <li>forward primer: which is \u201cGTGYCAGCMGCCGCGGTAA\u201d</li> <li>reverse primer: which is \u201cCCGYCAATTYMTTTRAGTTT\u201d</li> <li>whether you have wobble bases</li> <li>whether you should discard reads that were not trimmed</li> </ul> tip: <p>--verbose: The verbose option specifies that you want to display detailed processing information on your screen. </p> <pre><code>qiime cutadapt trim-paired \\\n    --i-demultiplexed-sequences QIIME2_files/demux-paired-end.qza \\\n    --p-front-f GTGYCAGCMGCCGCGGTAA \\\n    --p-front-r CCGYCAATTYMTTTRAGTTT \\\n    --p-match-adapter-wildcards \\\n    --p-discard-untrimmed \\\n    --verbose \\\n    --o-trimmed-sequences QIIME2_files/paired-end-demux-trimmed.qza | tee QIIME2_files/cutadaptresults.log\n</code></pre> <p>Summarise the .qza artefact using the command below, and then visualise the trimmed reads in QIIME 2 view (https://view.qiime2.org/). </p> <pre><code>qiime demux summarize \\\n    --i-data QIIME2_files/paired-end-demux-trimmed.qza \\\n    --o-visualization QIIME2_files/paired-end-demux-trimmed-summary.qzv \n</code></pre> Question(s): Basic - Check the \u201cOverview\u201d tabAdvanced \u2013 check the \u201cInteractive\u201d tab <ol> <li>What are wobble bases? What does --p-match-adapterread-wildcards do?  Tip: go to the Cutadapt website to find out (https://cutadapt.readthedocs.io/en/stable/)</li> <li>What does --p-discard-untrimmed do? What kinds of reads might not get trimmed? </li> <li>For the same samples explored earlier, how many reads are there?</li> </ol> <ol> <li>What are the read lengths now? What was the length of the primer sequences? </li> </ol>"},{"location":"workflow/#34-denoise-with-dada2","title":"3.4 Denoise with DADA2","text":"<p>Now we will \u201cdenoise\u201d the reads, that is, carry out a series of steps with the goal of retaining \u201ctrue\u201d reads, those that represent the taxa that are present in the sample. These reads may differ by one nucleotide, and they are referred to as exact sequence variants (ESVs) or amplicon sequence variants (ASVs). </p> <p>As we are working with paired end reads, we use qiime2 dada2 denoise-paired. Through this command, quality filtering, merging of forward and reverse reads, dereplication and removal of chimeras is conducted. </p> <p>The quality filtering aspect refers to trimming the ends of reads where quality is suboptimal, users can also discard sequences below a particular length. This step is done first to optimize the merging of forward and reverse reads. The merging is done according to default parameters (not specified in the command). </p> <p>Dereplication refers to checking the presence of all identical sequencing reads and then reducing these to one \u201cunique sequence\u201d with a note of its abundance.  Removal of chimeras refers to the removal of sequences that are \u201chybrids\u201d of different parent sequences, and which do not correspond to true ASVs.</p> <p>Here we will be specifying the following parameters: </p> <ul> <li>Truncation length for forward reads: at what length the forward reads will be cut and all reads below this length will be discarded</li> <li>Truncation length for reverse reads: at what length the reverse reads will be cut and all reads below this length will be discarded</li> </ul> <p>Note that now we will have 3 output files:</p> <ul> <li>an abundance table comprising the unique sequences and their abundance</li> <li>a fasta file with the unique sequences, which we refer to as the representative sequences</li> <li>a file containing the statistics for the denoising steps</li> </ul> <p>You can find more information on DADA2 here (https://benjjneb.github.io/dada2/).</p> <p>Run the following command: </p> <pre><code>qiime dada2 denoise-paired \\\n    --i-demultiplexed-seqs QIIME2_files/paired-end-demux-trimmed.qza \\\n    --p-trunc-len-f 225 \\\n    --p-trunc-len-r 225 \\\n    --o-table QIIME2_files/table.qza \\\n    --o-representative-sequences QIIME2_files/rep-seqs.qza \\\n    --o-denoising-stats QIIME2_files/denoising-stats.qza \n</code></pre>"},{"location":"workflow/#341-summarize-read-counts","title":"3.4.1 Summarize read counts","text":"<p>We will now summarise the number of reads that we have in each sample, having done the denoising. We use  feature-table summarize, providing a metadata file that contains information about our samples. </p> <p>Run the following command:  <pre><code>qiime feature-table summarize \\\n    --i-table QIIME2_files/table.qza \\\n    --o-visualization QIIME2_files/table.qzv \\\n    --m-sample-metadata-file Metadata/metadata.tsv\n</code></pre></p> <p>Open QIIME2 view (https://view.qiime2.org/) and drop the table.qzv in the drag&amp;drop window to see the results. </p> Question(s): <ol> <li>In the overview tab, what does number of features refer to?</li> <li>In the interactive tab, quantitatively compare the number of reads before and after denoising for all 18 samples.</li> <li>Get together in pairs, and calculate the percentage of reads that have been retained for each sample. </li> </ol> <p>Optional command: Visualise the representative sequences after denoising with DADA2 We use qiime feature-table tabulate-seqs to see the unique/representative sequences.</p> <p>Run the following command: </p> <pre><code>qiime feature-table tabulate-seqs \\\n    --i-data QIIME2_files/rep-seqs.qza \\\n    --o-visualization QIIME2_files/rep-seqs.qzv\n</code></pre> Question(s): <ol> <li>After running denoising with DADA2, we have obtained a set of amplicon sequence variants or exact sequence variants. Why is the length of these sequences different to that of the reads in the first fastq files you looked at?  </li> </ol>"},{"location":"workflow/#35-assign-taxonomy","title":"3.5  Assign taxonomy","text":"<p>We now assign taxonomy to the unique/representative sequences found across all samples. We do this with the q2-feature-classifier plugin, making use of a pre-trained Naive Bayes classifier. This classifier is an algorithm that was trained on the SILVA reference database (downloadedDecember 2019) comprising hundreds of thousands of bacterial sequences with taxonomic information. The output is a file containing the results for the different taxonomic ranks (from domain to species), and the level of confidence for the taxonomic assignment. </p> <pre><code>qiime feature-classifier classify-sklearn \\\n    --i-classifier Taxonomy_classifier/silva-138-ssu-nr99-99-V4V5-classifier.qza \\\n    --i-reads QIIME2_files/rep-seqs.qza \\\n    --o-classification QIIME2_files/taxonomy.qza\n</code></pre>"},{"location":"workflow/#351-tabulate-the-taxonomy-with-the-following-command","title":"3.5.1 Tabulate the taxonomy with the following command:","text":"<pre><code>qiime metadata tabulate \\\n    --m-input-file QIIME2_files/taxonomy.qza \\\n    --o-visualization QIIME2_files/taxonomy.qzv\n</code></pre> Question(s): BasicAdvanced <ol> <li>What are the different taxonomic ranks that are being assigned?</li> <li>Are there any sequences that are not bacterial? If so, what are they?</li> </ol> <ol> <li>Choose one of the features (ASVs), can you find its nucleotide sequence in another file? Once you have done so, check the taxonomic output obtained using blast, which implements a different algorithm. You can do so here:. Is the taxonomic assingment the same or different?</li> </ol>"},{"location":"workflow/#36-filter-non-bacterial-sequences","title":"3.6 Filter non-bacterial sequences","text":"<p>Our library preparation and sequencing targets the prokaryotic 16S rRNA gene, but we may end up obtaining reads that are not prokaryotic eg from chloroplasts or mitochondria, and with reads that originate from archaea, which we are not looking at in this study. By using taxa filter-table we can specify what taxa we want to retain and what taxa we want to exclude in the ASV abundance table. With \u201cmode\u201d we are specifying that we want the search terms not to be case sensitive e.g. Eukaryota/eukaryota.</p> <p>Run the following commands:</p> <pre><code>qiime taxa filter-table \\\n--i-table QIIME2_files/table.qza \\\n--i-taxonomy QIIME2_files/taxonomy.qza \\\n--p-mode contains \\\n--p-include d__ \\\n--p-exclude 'd__;,Eukaryota' \\\n--o-filtered-table QIIME2_files/filtered-table.qza\n</code></pre> <pre><code>qiime feature-table filter-seqs \\\n--i-data QIIME2_files/rep-seqs.qza \\\n--i-table QIIME2_files/filtered-table.qza \\\n--o-filtered-data QIIME2_files/filtered-sequences.qza\n</code></pre> Question(s) <ol> <li>What is the last command being used for?</li> </ol>"},{"location":"workflow/#37-generate-taxonomic-barplots","title":"3.7 Generate taxonomic barplots","text":"<p>In order to visualise the relative abundance of the taxa in each sample, we use taxa barplot</p> <p>Run the following command:</p> <pre><code>qiime taxa barplot \\\n--i-table QIIME2_files/filtered-table.qza \\\n--i-taxonomy QIIME2_files/taxonomy.qza \\\n--m-metadata-file Metadata/metadata.tsv \\\n--o-visualization QIIME2_files/taxa-bar-plots-1.qzv\n</code></pre> Question(s) <ol> <li>What taxonomic ranks correspond to the different \u201clevels\u201d?</li> <li>What patterns do you observe at the different taxonomic ranks/levels? Do you observe any differences across the three groups? </li> <li>Which taxonomic rank provides most information about the differences across the groups?</li> <li>Which taxa differ most, in terms of relative abundance, across the three groups?</li> <li>Investigate these taxa using online resources: what other relevant information can you find in the literature? </li> </ol>"},{"location":"workflow/#38-generate-the-rarefaction-curve","title":"3.8. Generate the rarefaction curve","text":"<p>We expect greater sequencing depth to allow us to capture bacterial diversity more accurately: as sequencing depth increases, more and more taxa are recovered. You can see this in the rarefaction plot, where we look at the changes in observed features (ASVs) recovered at different sequencing depths (number of reads sequenced). However, at a certain point we observe that the number of features recovered stabilises: we reach a plateau, and we infer that the sequencing depth is sufficient.</p> <p>Plot the rarefaction curves for the samples from the dataset using diversity alpha-rarefaction. </p> tip <p>Help on aplha diversity: qiime diversity alpha-rarefaction \u2013help</p> <pre><code>qiime diversity alpha-rarefaction \\\n    --i-table QIIME2_files/filtered-table.qza \\\n    --i-phylogeny Phylogenetic_tree/rooted-tree.qza \\\n    --m-metadata-file Metadata/metadata.tsv \\\n    --p-max-depth 88500 \\\n    --o-visualization QIIME2_files/alpha-rarefaction-plot.qzv\n</code></pre> Question(s): <ol> <li>Why did we specify a max depth of 88,500?</li> <li>Do you observe differences across the three groups?</li> </ol>"},{"location":"workflow/#39-core-metrics-phylogenetic-alpha-and-beta-diversities","title":"3.9. Core metrics phylogenetic: alpha and beta diversities\u00b6","text":"<p>To investigate alpha and beta diversity, we use diversity core-metrics-phylogenetic, computing the following metrics.</p> <ul> <li>Alpha diversity indices<ul> <li>Shannon\u2019s diversity </li> <li>Observed Features (in this case ASVs)</li> <li>Faith\u2019s Phylogenetic Diversity </li> <li>Evenness </li> </ul> </li> <li>Beta diversity distances<ul> <li>Jaccard distance </li> <li>Bray-Curtis distance </li> <li>unweighted UniFrac distance </li> <li>weighted UniFrac distance </li> </ul> </li> </ul> <p>To run these analyses, in addition to the ASV abundance table, we need to provide a phylogenetic tree (already generated for you) and the metadata file. To increase computational speed we use  the --p-n-jobs-or-threads.</p> <p>Importantly, diversity core-metrics-phylogenetic requires us to use the same sampling depth for all samples. Thus, we need to provide a sampling depth, that is, the number of total reads from each sample that will be used. If we want to keep all samples in the analyses, we will have to specify the minimum read depth in our sample set. Do you recall what this was? Make sure to specify it with--p-sampling-depth </p> <p>Run the following command:</p> <p>We use qiime diversity core-metrics-phylogenetic to generate a set of results. </p> <p><pre><code>qiime diversity core-metrics-phylogenetic \\\n    --i-phylogeny Phylogenetic_tree/rooted-tree.qza \\\n    --i-table QIIME2_files/filtered-table.qza \\\n    --p-sampling-depth xxxx \\\n    --p-n-jobs-or-threads 4 \\\n    --m-metadata-file Metadata/metadata.tsv \\\n    --output-dir QIIME2_files/diversity-core-metrics-phylogenetic\n</code></pre> View the folders that have been generated by running: </p> <pre><code>ls -l diversity-core-metrics-phylogenetic\n</code></pre>"},{"location":"workflow/#391-alpha-diversity-and-significance","title":"3.9.1 Alpha diversity and significance","text":"<p>We will first focus on alpha (intra-sample diversity) and return to beta diversities later again.  For the alpha diversity indices, we check whether there are significant differences across groups. We do so using diversity alpha-group significance. You can do this for any of the indices computed. </p> <p>Run the following command to test statistically significant differences for the \u201cobserved features\u201d index:</p> <pre><code>qiime diversity alpha-group-significance \\\n    --i-alpha-diversity QIIME2_files/diversity-core-metrics-phylogenetic/observed_features_vector.qza \\\n    --m-metadata-file Metadata/metadata.tsv \\\n    --o-visualization QIIME2_files/alpha-group-sig-obs-feats.qzv\n</code></pre> Question(s): <ol> <li>Explore the alpha diversity indices, and test statistical significance for these. In pairs, discuss the patterns observed. Which \u201cgroups\u201d of samples have higher intra-sample diversity? Which groups have lower intra-sample diversity? What could be potential explanations?  </li> <li>Are the alpha diversity patterns congruent with the taxonomic composition observed in the barplots?</li> </ol> <p>For turbo learners Now run the previous command specifying different sampling depths (remember to save the output file under a different name). </p>"},{"location":"workflow/#392-beta-diversity-and-significance","title":"3.9.2 Beta diversity and significance","text":"<p>We now focus on beta diversity (inter-sample diversity). To test significance we use diversity beta-group significance. We will do so for the Bray Curtis distance matrix. </p> <pre><code>qiime diversity beta-group-significance \\\n    --i-distance-matrix QIIME2_files/diversity-core-metrics-phylogenetic/bray_curtis_distance_matrix.qza \\\n    --m-metadata-file Metadata/metadata.tsv \\\n    --m-metadata-column type \\\n    --o-visualization QIIME2_files/diversity-core-metrics-phylogenetic/braycurtis-type-significance.qzv \\\n    --p-pairwise\n</code></pre> Question(s): <ol> <li>Explore the different distance metrics and the corresponding PCoA plots generated. What are the similarities and differences?  </li> <li>Now focus on the weighted and the unweighted unifrac distance matrices. Are there significant differences across the groups with these distance matrices?</li> </ol>"}]}